@using EPiServer
@using EPiServer.Core
@using EPiServer.DataAbstraction
@using EPiServer.Filters
@using EPiServer.Security
@using EPiServer.ServiceLocation
@using EPiServer.Web.Routing
@using Knowit.EpiserverFramework.Models.Pages
@using Knowit.EpiserverFramework.Models.Pages.MeetInNykgPages
@model Knowit.EpiserverFramework.Models.ViewModels.IPageViewModel<Knowit.EpiserverFramework.Models.Core.SitePageData>

@{
    <nav id="breadcrumb-nav">
        <div class="inner-wrap">
            <ul>
                <li><a href="/">Startsidan</a></li>
                @{ 
                    var contentLoader = ServiceLocator.Current.GetInstance<IContentLoader>();
                    var parents = contentLoader.GetAncestors(new PageReference(Model.CurrentPage.PageLink.ID))
                        .Reverse()
                        .Cast<PageData>()
                        .Filter(new FilterAccess(AccessLevel.Read))
                        .Filter(new FilterPublished());
                    foreach(PageData page in parents)
                    {
                        if(page.PageTypeID != ServiceLocator.Current.GetInstance<IContentTypeRepository>().Load<StartPageModel>().ID && page.PageLink.ID != PageReference.RootPage.ID && page.PageTypeID != ServiceLocator.Current.GetInstance<IContentTypeRepository>().Load<MeetInNykgStartPageModel>().ID)
                        {
                            IEnumerable<PageData> filteredChildren;

                            PageDataCollection allChildren = DataFactory.Instance.GetChildren(page.PageLink);
                            var eventorcompany = false;

                            if (Model.CurrentPage.Settings != null && Model.CurrentPage.Settings?.CompanyContainerPage != null && Model.CurrentPage.Settings?.EventContainerPage == null)
                            {
                                if (page.PageLink == Model.CurrentPage.Settings.CompanyContainerPage || page.PageLink == Model.CurrentPage.Settings.EventContainerPage)
                                {
                                    eventorcompany = true;
                                }
                            }
                            <li>
                                <a href="@UrlResolver.Current.GetUrl(page.LinkURL)" class="parent">@page.PageName @if(allChildren.Count != 0 && !eventorcompany) {<div class="arrow"></div>}</a>
                                @{
                                    if (allChildren.Count != 0 && !eventorcompany)
                                    {
                                        filteredChildren = FilterForVisitor.Filter(allChildren).Where(p => p.IsVisibleOnSite() && p.VisibleInMenu);
                                        <ul>
                                            @foreach (PageData item in filteredChildren)
                                            {
                                                <li><a href="@UrlResolver.Current.GetUrl(item.LinkURL)">@item.PageName</a></li>
                                            }
                                        </ul>
                                    }
                                }
                            </li>
                        }
                    }
                    IEnumerable<PageData> theseFilteredChildren = new List<PageData>();

                    PageDataCollection theseAllChildren = DataFactory.Instance.GetChildren(Model.CurrentPage.PageLink);
                    <li>
                        <a href="@UrlResolver.Current.GetUrl(Model.CurrentPage.LinkURL)" class="parent">@Model.CurrentPage.PageName @if(theseAllChildren.Count != 0) {<div class="arrow"></div>}</a>
                        @{

                            if (theseAllChildren.Count != 0)
                            {
                                theseFilteredChildren = FilterForVisitor.Filter(theseAllChildren).Where(p => p.IsVisibleOnSite() && p.VisibleInMenu);
                                <ul>
                                    @foreach (PageData item in theseFilteredChildren)
                                    {
                                        <li><a href="@UrlResolver.Current.GetUrl(item.LinkURL)">@item.PageName</a></li>
                                    }
                                </ul>
                            }
                        }
                    </li>
                }
            </ul>
        </div>
    </nav>
}
